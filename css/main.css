* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    text-align: center;
}

#card-container {
    margin: 3em auto;
    border-spacing: 0.7em;
}

.card {
    width: 6em;
    border: 1px solid black;
    border-radius: 4px;
    background-position: center;
    background-size: cover;
    background-repeat: no-repeat;
    box-shadow: 1px 1px 6px 1px black;
    cursor: pointer;
}

.card--4 {
    padding-top: 23%;
}

.card--6 {
    padding-top: 15%;
}

.card--8 {
    padding-top: 11%;
}

.card--opened {
    background-size: contain;
}

.card:hover {
    outline: 2px solid blue;
}

.card:active {
    opacity: 0.7;
}

/* Added !important because background images of cards were dynamically set 
by javascript .css() method and this will add inline css which specificity is 1000.
so in order to overwrite inline css with card--closed background, 
it has to be !important */
.card--closed {
    background-image: url("../img/card-back.jpg") !important;
}

.card--revealed {
    border: 2px solid blue;
    width: 6em;
    height: 6em;
    border-radius: 4px;
    background-position: center;
    background-size: contain;
    background-repeat: no-repeat;
    box-shadow: 1px 1px 6px 1px black;
    opacity: 0.5;
}

.overlay {
    height: 100%;
    width: 100%;
    display: none;
    position: fixed;
    z-index: 1;
    top: 0;
    left: 0;
    background-color: rgb(0,0,0);
    background-color: rgba(0,0,0, 0.6); /* Black with a little bit see-through */
}

.overlay--show {
    display: block;
}

.dropdown {
    font-size: 2em;
    margin-top: 2em;
    width: 7em;
}

.overlay_message {
    display: block;
    width: 80%;
    margin: auto;
    text-align: center;
    margin-top: 4em;
    font-size: 2.5em;
    color: white;
    border: 0;
    border-bottom: 2px;
    font-weight: bold;
    cursor: pointer;
    font-family: 'Bungee Shade', cursive;
}

.overlay_message:hover {
    color:darkgrey;
}

#runner {
    font-size: 2em;
    outline: 1px solid grey;
    margin: 0 10%;
}

#failed-count {
    font-size: 2em;
    margin: 1em;
}